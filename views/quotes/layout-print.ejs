<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Proposta Comercial - <%= quote.quote_code %></title>
  <style>
    /* CSS otimizado para impressão */
    * { margin: 0; padding: 0; box-sizing: border-box; }

    body {
      font-family: Arial, sans-serif;
      font-size: 12px;
      line-height: 1.4;
      color: #333;
      background: white;
    }

    .print-btn {
      display: none;
      position: fixed;
      top: 10px;
      right: 10px;
      background: #dc2626;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      z-index: 1000;
    }

    /* Layout para impressão */
    .page {
      width: 210mm;
      min-height: 297mm;
      margin: 0 auto;
      padding: 20mm;
      background: white;
      page-break-after: always;
    }

    .page:last-child { page-break-after: avoid; }

    /* Cabeçalho */
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      border-bottom: 2px solid #dc2626;
      padding-bottom: 10px;
    }

    .logo { max-height: 60px; }
    .header-info { text-align: right; }
    .proposal-title { font-size: 18px; font-weight: bold; color: #dc2626; }
    .proposal-code { font-size: 14px; margin-top: 5px; }

    /* Dados da proposta */
    .proposal-data {
      margin-bottom: 25px;
    }

    .data-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 15px;
      margin-bottom: 20px;
    }

    .data-item {
      display: flex;
      flex-direction: column;
      border: 1px solid #ddd;
      padding: 8px;
      border-radius: 4px;
    }

    .data-label {
      font-weight: bold;
      font-size: 10px;
      color: #666;
      text-transform: uppercase;
      margin-bottom: 3px;
    }

    .data-value {
      font-size: 12px;
      color: #333;
    }

    /* Seções */
    .section {
      margin-bottom: 25px;
    }

    .section-title {
      font-size: 14px;
      font-weight: bold;
      color: #dc2626;
      margin-bottom: 15px;
      border-bottom: 1px solid #dc2626;
      padding-bottom: 5px;
    }

    /* Modalidades */
    .modalidade {
      margin-bottom: 30px;
      border: 2px solid #dc2626;
      border-radius: 8px;
      padding: 15px;
    }

    .modalidade-a { border-color: #dc2626; background: rgba(220, 38, 38, 0.02); }
    .modalidade-b { border-color: #1f2937; background: rgba(31, 41, 55, 0.02); }

    .modalidade-title {
      font-size: 16px;
      font-weight: bold;
      margin-bottom: 15px;
      text-align: center;
    }

    .modalidade-a .modalidade-title { color: #dc2626; }
    .modalidade-b .modalidade-title { color: #1f2937; }

    /* Tabelas */
    .items-table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 15px;
      font-size: 11px;
    }

    .items-table th,
    .items-table td {
      border: 1px solid #ddd;
      padding: 6px;
      text-align: left;
    }

    .items-table th {
      background: #f5f5f5;
      font-weight: bold;
      font-size: 10px;
      text-transform: uppercase;
    }

    .items-table .text-right { text-align: right; }
    .items-table .text-center { text-align: center; }

    /* Totais */
    .totals {
      display: flex;
      justify-content: flex-end;
      margin-top: 10px;
    }

    .total-box {
      background: #f5f5f5;
      padding: 10px;
      border-radius: 5px;
      min-width: 200px;
      text-align: right;
    }

    .total-line {
      display: flex;
      justify-content: space-between;
      margin-bottom: 5px;
    }

    .total-final {
      font-weight: bold;
      font-size: 14px;
      border-top: 1px solid #333;
      padding-top: 5px;
    }

    /* Termos e condições */
    .terms {
      margin-top: 30px;
      page-break-inside: avoid;
    }

    .terms-title {
      font-size: 14px;
      font-weight: bold;
      color: #dc2626;
      margin-bottom: 15px;
    }

    .terms-content {
      font-size: 11px;
      line-height: 1.5;
    }

    .terms-content ul {
      margin-left: 20px;
      margin-bottom: 15px;
    }

    .terms-content li {
      margin-bottom: 8px;
    }

    /* Assinatura */
    .signature-section {
      margin-top: 40px;
      page-break-inside: avoid;
    }

    .signature-box {
      border: 1px solid #ddd;
      padding: 20px;
      text-align: center;
      margin-top: 20px;
    }

    .signature-line {
      border-bottom: 1px solid #333;
      width: 300px;
      margin: 20px auto;
      height: 40px;
    }

    /* Contato */
    .contact-info {
      background: #f9f9f9;
      padding: 15px;
      border-radius: 5px;
      margin-top: 20px;
      text-align: center;
    }

    /* Media queries para impressão */
    @media print {
      body { background: white !important; }
      .print-btn { display: none !important; }
      .page { margin: 0; padding: 15mm; box-shadow: none; }
      .page-break { page-break-before: always; }
    }

    @media screen {
      .print-btn { display: block; }
      .page { box-shadow: 0 0 10px rgba(0,0,0,0.1); margin: 20px auto; }
    }
  </style>
</head>
<body>
  <% const pdfMode = typeof isPdfRender !== "undefined" ? isPdfRender : false; %>
  <!-- Botões de ação fixos no topo -->
  <% if (!pdfMode) { %>
  <div class="action-buttons" style="position: fixed; top: 10px; left: 50%; transform: translateX(-50%); z-index: 1000; display: flex; flex-wrap: nowrap; gap: 12px; justify-content: center; align-items: center; background: rgba(255,255,255,0.95); padding: 12px 24px; border-radius: 50px; box-shadow: 0 4px 20px rgba(0,0,0,0.15); backdrop-filter: blur(10px);">
    <button class="action-btn back-btn" onclick="goBack()" style="background: #2563eb; color: white; border: none; padding: 10px 24px; border-radius: 25px; cursor: pointer; font-weight: 600; display: flex; align-items: center; gap: 8px; box-shadow: 0 2px 8px rgba(37,99,235,0.3); white-space: nowrap; transition: all 0.3s ease;">&larr; Voltar</button>
    <button class="action-btn print-btn" onclick="window.print()" style="background: #059669; color: white; border: none; padding: 10px 24px; border-radius: 25px; cursor: pointer; font-weight: 600; display: flex; align-items: center; gap: 8px; box-shadow: 0 2px 8px rgba(5,150,105,0.3); white-space: nowrap; transition: all 0.3s ease;">🖨️ Imprimir</button>
    <button class="action-btn close-btn" onclick="window.close()" style="background: #6b7280; color: white; border: none; padding: 10px 24px; border-radius: 25px; cursor: pointer; font-weight: 600; display: flex; align-items: center; gap: 8px; box-shadow: 0 2px 8px rgba(107,114,128,0.3); white-space: nowrap; transition: all 0.3s ease;">✕ Fechar</button>
  </div>
  <% } %>
  <% const fmt = (val) => Number(val || 0).toFixed(2).replace('.', ','); %>

  <!-- PíGINA PRINCIPAL: Proposta Completa -->
  <div class="page">
    <!-- Cabeçalho -->
    <div class="header">
      <div>
        <img src="/static/img/company-logo.jpg" alt="Pharmatec Logo" class="logo">
      </div>
      <div class="header-info">
        <div class="proposal-title">PROPOSTA COMERCIAL</div>
        <div class="proposal-code"><%= quote.quote_code %></div>
        <div><%= new Date(quote.date).toLocaleDateString('pt-BR') %></div>
      </div>
    </div>

    <!-- Dados da Proposta -->
    <div class="proposal-data">
      <div class="data-grid">
        <div class="data-item">
          <span class="data-label">Cliente</span>
          <span class="data-value"><%= quote.client || quote.company || '-' %></span>
        </div>
        <div class="data-item">
          <span class="data-label">CNPJ</span>
          <span class="data-value"><%= quote.cnpj || '-' %></span>
        </div>
        <div class="data-item">
          <span class="data-label">Representante</span>
          <span class="data-value"><%= quote.representative || '-' %></span>
        </div>
        <div class="data-item">
          <span class="data-label">Validade</span>
          <span class="data-value"><%= quote.validity_days || 30 %> dias</span>
        </div>
        <div class="data-item">
          <span class="data-label">Prazo de Entrega</span>
          <span class="data-value"><%= quote.delivery_time || 'A definir' %></span>
        </div>
        <div class="data-item">
          <span class="data-label">Modelo da Máquina</span>
          <span class="data-value"><%= quote.machine_model || '-' %></span>
        </div>
      </div>
    </div>

    <!-- Especificações Técnicas -->
    <% if (quote.tech_spec || quote.principle || quote.equipment_image || quote.equipment_images) { %>
    <div class="section">
      <%
        // Preparar array de imagens
        let equipImagesObj = {};
        if (quote.equipment_images) {
          try {
            equipImagesObj = typeof quote.equipment_images === 'string' ? JSON.parse(quote.equipment_images) : quote.equipment_images;
          } catch (e) {
            console.error('Erro ao parsear equipment_images:', e);
          }
        }
        // Fallback para imagem única
        if (Object.keys(equipImagesObj).length === 0 && quote.equipment_image) {
          equipImagesObj = {'0': quote.equipment_image};
        }

        // Converter objeto em array ordenado por chave numérica
        const equipImages = [];
        Object.keys(equipImagesObj).sort((a, b) => parseInt(a) - parseInt(b)).forEach(key => {
          equipImages[parseInt(key)] = equipImagesObj[key];
        });

        // Processar especificações e agrupar por equipamento
        const techLines = quote.tech_spec ? quote.tech_spec.split('\n').filter(line => line.trim()) : [];

        // Processar princípios de funcionamento (separados por "---")
        const principleParts = quote.principle ? quote.principle.split('---').map(p => p.trim()).filter(p => p) : [];

        // Agrupar linhas por equipamento
        let equipments = [];
        let currentEquip = null;

        techLines.forEach(line => {
          if (line.includes('--- EQUIPAMENTO')) {
            if (currentEquip) equipments.push(currentEquip);
            currentEquip = {
              title: line.replace(/---/g, '').trim(),
              specs: []
            };
          } else if (currentEquip && line.includes(':')) {
            const parts = line.split(':');
            currentEquip.specs.push({
              param: parts[0].trim(),
              value: parts.slice(1).join(':').trim()
            });
          }
        });
        if (currentEquip) equipments.push(currentEquip);
      %>

      <% if (quote.tech_spec) { %>
      <h3 class="section-title">Especificações Técnicas</h3>

      <% equipments.forEach((equip, equipIdx) => { %>
        <!-- Imagem do equipamento -->
        <% if (equipImages[equipIdx]) { %>
        <div style="text-align: center; margin-bottom: 15px;">
          <p style="font-size: 10px; margin: 0 0 8px 0; font-weight: 600;">Imagem do Equipamento <%= equipIdx + 1 %></p>
          <img src="<%= equipImages[equipIdx] %>" alt="Equipamento <%= equipIdx + 1 %>" style="max-width: 400px; max-height: 300px; border: 1px solid #ddd; border-radius: 5px; object-fit: contain;" onerror="this.style.display='none';">
        </div>
        <% } %>

        <!-- Tabela do equipamento -->
        <table style="width: 100%; border-collapse: collapse; margin-bottom: 15px; font-size: 11px;">
          <thead>
            <tr style="background: #f3f4f6;">
              <th style="padding: 8px; text-align: left; border: 1px solid #ddd; font-weight: 600; width: 35%;">Parâmetro</th>
              <th style="padding: 8px; text-align: left; border: 1px solid #ddd; font-weight: 600;">Especificação</th>
            </tr>
          </thead>
          <tbody>
            <% equip.specs.forEach(spec => { %>
            <tr>
              <td style="padding: 8px; border: 1px solid #ddd; font-weight: 600;"><%= spec.param %></td>
              <td style="padding: 8px; border: 1px solid #ddd;"><%= spec.value %></td>
            </tr>
            <% }); %>
          </tbody>
        </table>

        <!-- Princípio de Funcionamento deste equipamento -->
        <%
          // Dividir princípio em partes (separadas por "---")
          const principleSections = quote.principle ? quote.principle.split('---').map(p => p.trim()).filter(p => p && !p.includes('EQUIPAMENTO')) : [];

          if (principleSections[equipIdx]) {
        %>
        <div style="margin-bottom: 20px;">
          <h4 style="font-size: 11px; font-weight: 700; margin-bottom: 8px;">Princípio de Funcionamento</h4>
          <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;"><%= principleSections[equipIdx] %></p>
        </div>
        <% } %>
      <% }); %>
      <% } %>
    </div>
      <% } %>

    <!-- Modalidade A (Sistema CIF) -->
    <%
    const modalidadeA = sections.filter(s => s.key.includes('_a'));
    const hasModalidadeA = modalidadeA.some(s => s.items && s.items.length > 0);
    %>
    <% if (hasModalidadeA) { %>
    <div class="modalidade modalidade-a">
      <h2 class="modalidade-title">MODALIDADE A - Sistema CIF</h2>

      <% modalidadeA.forEach(section => { %>
        <% if (section.items && section.items.length > 0) { %>
        <div class="section">
          <h3 class="section-title"><%= section.title.replace('Modalidade A - ', '') %></h3>
          <table class="items-table">
            <thead>
              <tr>
                <th style="width: 40%">Descrição</th>
                <th style="width: 8%" class="text-center">Qtd</th>
                <% if (section.key.includes('operacionais') || section.key.includes('assessoria')) { %>
                <th style="width: 8%" class="text-center">Dias</th>
                  <% } %>
                <th style="width: 15%" class="text-right">Valor Unit.</th>
                <th style="width: 10%" class="text-center">Moeda</th>
                <th style="width: 15%" class="text-right">Subtotal</th>
              </tr>
            </thead>
            <tbody>
              <% section.items.forEach(item => { %>
              <tr>
                <td><%= item.name %></td>
                <td class="text-center"><%= item.qty %></td>
                <% if (section.key.includes('operacionais') || section.key.includes('assessoria')) { %>
                <td class="text-center"><%= item.days || '-' %></td>
                  <% } %>
                <td class="text-right"><%= fmt(item.unit) %></td>
                <td class="text-center"><%= item.currency %></td>
                <td class="text-right"><%= item.currency %> <%= fmt(item.subtotal) %></td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
          <% } %>
      <% }); %>

      <% if (totals.modalidadeA && Object.keys(totals.modalidadeA).length > 0) { %>
      <div class="totals">
        <div class="total-box">
          <%
          const currenciesA = Object.entries(totals.modalidadeA).filter(([currency, value]) => value > 0);
          if (currenciesA.length > 0) {
            const totalText = currenciesA.map(([currency, value]) => {
              const symbol = currency === 'BRL' ? 'R$' : currency === 'USD' ? '$' : 'â‚¬';
              return `${currency} ${symbol} ${fmt(value)}`;
            }).join(' + ');
          %>
          <div class="total-line total-final">
            <span>Total Modalidade A:</span>
            <span><%= totalText %></span>
          </div>
            <% } %>
        </div>
      </div>
        <% } %>
    </div>
      <% } %>

    <!-- Modalidade B (Sistema FOB) -->
    <%
    const modalidadeB = sections.filter(s => s.key.includes('_b'));
    const hasModalidadeB = modalidadeB.some(s => s.items && s.items.length > 0);
    %>
    <% if (hasModalidadeB) { %>
    <div class="modalidade modalidade-b">
      <h2 class="modalidade-title">MODALIDADE B - Sistema FOB</h2>

      <% modalidadeB.forEach(section => { %>
        <% if (section.items && section.items.length > 0) { %>
        <div class="section">
          <h3 class="section-title"><%= section.title.replace('Modalidade B - ', '') %></h3>
          <table class="items-table">
            <thead>
              <tr>
                <th style="width: 40%">Descrição</th>
                <th style="width: 8%" class="text-center">Qtd</th>
                <% if (section.key.includes('operacionais') || section.key.includes('assessoria')) { %>
                <th style="width: 8%" class="text-center">Dias</th>
                  <% } %>
                <th style="width: 15%" class="text-right">Valor Unit.</th>
                <th style="width: 10%" class="text-center">Moeda</th>
                <th style="width: 15%" class="text-right">Subtotal</th>
              </tr>
            </thead>
            <tbody>
              <% section.items.forEach(item => { %>
              <tr>
                <td><%= item.name %></td>
                <td class="text-center"><%= item.qty %></td>
                <% if (section.key.includes('operacionais') || section.key.includes('assessoria')) { %>
                <td class="text-center"><%= item.days || '-' %></td>
                  <% } %>
                <td class="text-right"><%= fmt(item.unit) %></td>
                <td class="text-center"><%= item.currency %></td>
                <td class="text-right"><%= item.currency %> <%= fmt(item.subtotal) %></td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
          <% } %>
      <% }); %>

      <% if (totals.modalidadeB && Object.keys(totals.modalidadeB).length > 0) { %>
      <div class="totals">
        <div class="total-box">
          <%
          const currenciesB = Object.entries(totals.modalidadeB).filter(([currency, value]) => value > 0);
          if (currenciesB.length > 0) {
            const totalText = currenciesB.map(([currency, value]) => {
              const symbol = currency === 'BRL' ? 'R$' : currency === 'USD' ? '$' : 'â‚¬';
              return `${currency} ${symbol} ${fmt(value)}`;
            }).join(' + ');
          %>
          <div class="total-line total-final">
            <span>Total Modalidade B:</span>
            <span><%= totalText %></span>
          </div>
            <% } %>
        </div>
      </div>
        <% } %>
    </div>
      <% } %>


    <!-- Observações -->
    <% if (quote.notes) { %>
    <div class="section">
      <h3 class="section-title">Observações</h3>
      <p style="font-size: 11px; line-height: 1.6; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;"><%= quote.notes %></p>
    </div>
      <% } %>
  </div>

  <!-- PíGINA DE CONDIÇÕES DE PAGAMENTO (se incluída) -->
  <% if (quote.include_payment_conditions === 'on' || quote.include_payment_conditions === true) { %>
  <div class="page page-break">
    <div class="payment-conditions">
      <h2 style="text-align: center; color: #dc2626; font-size: 16px; margin-bottom: 25px; font-weight: bold;">CONDIÇÕES DE PAGAMENTO</h2>

      <div style="margin-bottom: 20px;">
        <p style="font-size: 11px; line-height: 1.6; text-align: justify; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;">
          <%= quote.payment_intro %>
        </p>
      </div>

      <div style="margin-bottom: 20px;">
        <h3 style="color: #dc2626; font-size: 12px; margin-bottom: 10px; font-weight: bold;">Montante em dólares americanos independente da opção:</h3>
        <div style="background: #f8f9fa; padding: 15px; border-left: 4px solid #dc2626; margin-bottom: 15px;">
          <p style="font-size: 11px; line-height: 1.6; text-align: justify; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;">
            <strong>OPÇÃO A ou OPÇÃO B</strong><br>
            <%= quote.payment_usd_conditions %>
          </p>
        </div>
      </div>

      <div style="margin-bottom: 20px;">
        <p style="font-size: 11px; line-height: 1.6; text-align: justify; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;">
          <%= quote.payment_brl_intro %>
        </p>
      </div>

      <div style="margin-bottom: 20px;">
        <h3 style="color: #dc2626; font-size: 12px; margin-bottom: 10px; font-weight: bold;">OPÇÃO A ou OPÇÃO B (com SAT)</h3>
        <div style="background: #f8f9fa; padding: 15px; border-left: 4px solid #dc2626; margin-bottom: 15px;">
          <p style="font-size: 11px; line-height: 1.6; text-align: justify; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;">
            <%= quote.payment_brl_with_sat %>
          </p>
        </div>
      </div>

      <div style="margin-bottom: 20px;">
        <h3 style="color: #dc2626; font-size: 12px; margin-bottom: 10px; font-weight: bold;">OPÇÃO A ou OPÇÃO B (sem SAT)</h3>
        <div style="background: #f8f9fa; padding: 15px; border-left: 4px solid #dc2626; margin-bottom: 15px;">
          <p style="font-size: 11px; line-height: 1.6; text-align: justify; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;">
            <%= quote.payment_brl_without_sat %>
          </p>
        </div>
      </div>

      <div style="margin-top: 25px;">
        <p style="font-size: 10px; line-height: 1.6; text-align: justify; word-wrap: break-word; overflow-wrap: break-word; hyphens: auto;">
          <%= quote.payment_additional_notes %>
        </p>
      </div>
    </div>
  </div>
    <% } %>

  <!-- PíGINA DE TERMOS E GARANTIAS -->
  <div class="page page-break">
    <!-- Termos e Condições -->
    <div class="terms">
      <h2 class="terms-title">TERMOS DE GARANTIA GERAIS DO FABRICANTE</h2>
      <div class="terms-content">
        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          Garantia de materiais elétricos, mecânicos e pneumáticos comerciais: conforme garantia do fabricante ou fornecedor.
        </p>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          <strong>Excluem-se da garantia:</strong> os desgastes normais de uso; defeitos de mau uso, imperícia ou negligência no uso; uso inadequado do equipamento; defeitos originados pela falta de cuidados, execução incorreta ou inadequada na limpeza, lubrificação, ou armazenamento do equipamento, bem como exposição a agentes químicos corrosivos, ou com condições ambientais e/ou elétricas inadequadas ou deficientes; defeitos ou danos causados por instalação ou manutenção técnica imprópria, e ainda, violação, alteração, ou substituição de peças ou acessórios, bem como outros itens, por serviço técnico não autorizado pelo fabricante; não cumprimento de orientações técnicas; danos causados por acidente; danos causados por agentes da natureza, assim como pancadas, quedas, queimadas, incêndios, enchentes, nevasca, nevoeiro, também furto, roubo, depredação, dentre outros.
        </p>

        <h3 style="margin: 20px 0 10px 0; color: #dc2626; font-size: 12px;">TERMOS DE GARANTIA GERAIS DO GRUPO ZANATECH</h3>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          Em linhas completas ou quando necessário, a equipe REPRESENTANTE visitará o cliente, podendo ser acompanhada pela equipe do Grupo Zanatech (despesas de alimentação, hospedagem e deslocamento são pagas pelo cliente). O Grupo Zanatech pode traduzir a documentação de inglês para português (serviço pago pelo cliente) e oferece tradução gratuita da IHM de inglês para português caso solicitado pelo REPRESENTANTE. Para novas vendas, a garantia nacional do Grupo Zanatech complementa a garantia do fabricante REPRESENTANTE, sem cancelá-la ou substituí-la, tendo a validade estipulada previamente, para os equipamentos que forem instalados, qualificados e os operadores treinados por pessoal autorizado pelo Grupo Zanatech ou REPRESENTANTE (serviço pago pelo cliente). O Grupo Zanatech fornece suporte a clientes locais através da garantia do Grupo Zanatech (sem cobrança de honorários, apenas há cobrança das despesas locais) e seu pessoal autorizado pode efetuar reparos e substituições em equipamentos REPRESENTANTE sob garantia, sem invalidá-la. Serviços para equipamentos REPRESENTANTE com garantia vencida.
        </p>

        <h3 style="margin: 20px 0 10px 0; color: #dc2626; font-size: 12px;">TERMOS DE GARANTIA GERAIS DO GRUPO ZANATECH</h3>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          Informamos que o Grupo Zanatech é o representante exclusivo oficial do REPRESENTANTE para todo o território brasileiro, sendo as únicas empresas autorizadas a realizar a venda, serviços de manutenção, suporte técnico e assistência para todos os equipamentos da marca REPRESENTANTE.
        </p>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          Esta representação exclusiva foi formalmente estabelecida e certificada pelo REPRESENTANTE, com vigência assegurada para o período de 2024 a 2027, conforme documento oficial emitido pelo Sr. Boo Han Lee, Presidente do REPRESENTANTE.
        </p>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          Ao adquirir equipamentos ou contratar serviços REPRESENTANTE através de empresas do Grupo Zanatech, V.Sa. conta com o respaldo oficial do fabricante e a segurança de aquisição legítima e atendimento qualificado e autorizado.
        </p>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          É um enorme prazer fazer parte do projeto de sua empresa, e ficamos í  disposição para quaisquer esclarecimentos.
        </p>

        <p style="margin-bottom: 15px; font-size: 11px; line-height: 1.6; text-align: justify;">
          <strong>Cordialmente,</strong>
        </p>

        <div style="margin-top: 30px; padding: 15px; background: #f8f9fa; border-radius: 5px;">
          <h4 style="margin-bottom: 10px; color: #dc2626; font-size: 11px;">VALIDADE DA PROPOSTA</h4>
          <p style="margin-bottom: 10px; font-size: 10px;">
            • Esta proposta tem validade de <%= quote.validity || 30 %> dias a partir da data de emissão.<br>
            • Preços sujeitos a alteração sem aviso prévio após vencimento da proposta.<br>
            • Confirmação do pedido mediante assinatura do contrato e pagamento da entrada.
          </p>
        </div>
      </div>
    </div>

    <!-- Informações de Contato -->
    <div class="contact-info">
      <h3 style="margin-bottom: 10px; color: #dc2626;">INFORMAÇÕES PARA CONTATO</h3>
      <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; text-align: left;">
        <div>
          <strong>Vendedor:</strong><br>
          <%= quote.seller_name || 'Consultor Pharmatec' %><br>
          Email: <%= quote.contact_email || 'vendas@apharmatec.com.br' %><br>
          Telefone: <%= quote.contact_phone || '(11) 99999-9999' %>
        </div>
        <div>
          <strong>Empresa:</strong><br>
          Pharmatec Solutions<br>
          Website: www.apharmatec.com.br<br>
          Suporte: suporte@apharmatec.com.br
        </div>
      </div>
    </div>

    <!-- Assinatura -->
    <div class="signature-section">
      <div class="signature-box">
        <p style="margin-bottom: 20px; font-weight: bold;">ACEITE DA PROPOSTA</p>
        <div class="signature-line"></div>
        <p style="margin-top: 10px; font-size: 11px;">
          Assinatura do Responsável Técnico<br>
          <strong><%= quote.seller_name || 'Representante Pharmatec' %></strong><br>
          Data: ___/___/______
        </p>
      </div>
    </div>
  </div>

  <!-- Scripts para geração de PDF -->
  <script>
    const isServerPdf = <%= (typeof isPdfRender !== 'undefined' && isPdfRender) ? 'true' : 'false' %>;
    const quoteData = <%- JSON.stringify(quote) %>;
    const sectionsData = <%- JSON.stringify(sections) %>;

    function mapItemForPayload(item) {
      return {
        name: item.name || '',
        qty: item.qty ?? item.quantity ?? 1,
        unit: item.unit ?? item.unit_price ?? item.price ?? 0,
        currency: item.currency || 'BRL',
        days: item.days ?? item.dias ?? ''
      };
    }

    function buildSpecsPayload(sectionList) {
      const template = {
        itemsEquipA: [],
        itemsAssessoriaA: [],
        itemsOperacionaisA: [],
        itemsCertificadosA: [],
        itemsEquipB: [],
        itemsAssessoriaB: [],
        itemsOperacionaisB: [],
        itemsCertificadosB: []
      };
      const keyMap = {
        equipamentos_a: 'itemsEquipA',
        assessoria_a: 'itemsAssessoriaA',
        operacionais_a: 'itemsOperacionaisA',
        certificados_a: 'itemsCertificadosA',
        equipamentos_b: 'itemsEquipB',
        assessoria_b: 'itemsAssessoriaB',
        operacionais_b: 'itemsOperacionaisB',
        certificados_b: 'itemsCertificadosB'
      };

      (sectionList || []).forEach(section => {
        const targetKey = keyMap[section.key];
        if (!targetKey) return;
        template[targetKey] = (section.items || []).map(mapItemForPayload);
      });

      return template;
    }

    async function generatePDFFromPage() {
      if (isServerPdf) return;
      const pdfBtn = document.querySelector('.pdf-btn');
      const actionButtons = document.querySelector('.action-buttons');
      if (!pdfBtn) return;

      const originalHtml = pdfBtn.innerHTML;
      pdfBtn.disabled = true;
      pdfBtn.innerHTML = 'Gerando PDF...';
      if (actionButtons) actionButtons.style.display = 'none';

      try {
        const formData = new FormData();
        const specsPayload = {
          sections: buildSpecsPayload(sectionsData),
          tech_spec: quoteData.tech_spec || '',
          principle: quoteData.principle || ''
        };

        formData.append('quote_code', quoteData.quote_code || '');
        formData.append('date', quoteData.date || '');
        formData.append('company', quoteData.company || '');
        formData.append('client', quoteData.client || '');
        formData.append('cnpj', quoteData.cnpj || '');
        formData.append('machine_model', quoteData.machine_model || '');
        formData.append('representative', quoteData.representative || '');
        formData.append('supplier', quoteData.supplier || '');
        formData.append('services', quoteData.services || '');
        formData.append('validity', String(quoteData.validity_days ?? quoteData.validity ?? 15));
        formData.append('delivery', quoteData.delivery_time || '');
        formData.append('notes', quoteData.notes || '');
        formData.append('contact_email', quoteData.contact_email || '');
        formData.append('contact_phone', quoteData.contact_phone || '');
        formData.append('seller_name', quoteData.seller_name || '');
        formData.append('payment_intro', quoteData.payment_intro || '');
        formData.append('payment_usd_conditions', quoteData.payment_usd_conditions || '');
        formData.append('payment_brl_intro', quoteData.payment_brl_intro || '');
        formData.append('payment_brl_with_sat', quoteData.payment_brl_with_sat || '');
        formData.append('payment_brl_without_sat', quoteData.payment_brl_without_sat || '');
        formData.append('payment_additional_notes', quoteData.payment_additional_notes || '');
        if (quoteData.include_payment_conditions) {
          formData.append('include_payment_conditions', 'on');
        }
        if (quoteData.equipment_image) {
          formData.append('existing_equipment_image', quoteData.equipment_image);
        }
        formData.append('specs_json', JSON.stringify(specsPayload));

        // Open print dialog for PDF generation
        const confirmMsg = 'Para gerar o PDF:\n\n' +
                          '1. No dialogo que vai abrir, escolha "Salvar como PDF" como destino\n' +
                          '2. Clique em "Salvar"\n' +
                          '3. Escolha onde salvar o arquivo\n\n' +
                          'Deseja continuar?';

        if (confirm(confirmMsg)) {
          window.print();
        }
      } catch (error) {
        console.error('Erro ao gerar PDF:', error);
        alert('Use o dialogo de impressao (Ctrl+P) e escolha "Salvar como PDF"');
      } finally {
        if (actionButtons) actionButtons.style.display = 'flex';
        if (pdfBtn) {
          pdfBtn.disabled = false;
          pdfBtn.innerHTML = originalHtml;
        }
      }
    }

    function goBack() {
      if (window.history.length > 1) {
        window.history.back();
      } else {
        window.location.href = '/quotes/new';
      }
    }

    window.addEventListener('beforeprint', () => {
      const buttons = document.querySelector('.action-buttons');
      if (buttons) buttons.style.display = 'none';
    });

    window.addEventListener('afterprint', () => {
      const buttons = document.querySelector('.action-buttons');
      if (buttons) buttons.style.display = 'flex';
    });
  </script>
</body>
</html>






