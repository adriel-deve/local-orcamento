// Test script for long text wrapping
import fetch from 'node-fetch';
import FormData from 'form-data';

const baseUrl = 'http://localhost:3003';

async function testLongTextWrapping() {
    console.log('üöÄ Testando quebra de linha para textos longos...\n');

    // Create very long text to test wrapping
    const longTechSpec = `Esta √© uma especifica√ß√£o t√©cnica muito longa que deve ser quebrada automaticamente em m√∫ltiplas linhas para evitar que o texto saia dos limites da p√°gina. O equipamento possui m√∫ltiplas funcionalidades avan√ßadas incluindo sistema de controle autom√°tico, sensores de alta precis√£o, interface touch screen colorida, conectividade IoT para monitoramento remoto, sistema de backup de energia, certifica√ß√µes internacionais de seguran√ßa e qualidade, manuais em m√∫ltiplos idiomas, suporte t√©cnico 24/7, garantia estendida, treinamento completo para operadores, sistema de alertas inteligentes, compatibilidade com diferentes protocolos de comunica√ß√£o, design ergon√¥mico para facilitar opera√ß√£o, baixo consumo energ√©tico, materiais de alta durabilidade e resist√™ncia √† corros√£o, sistema modular para expans√µes futuras.`;

    const longPrinciple = `O princ√≠pio de funcionamento baseia-se em tecnologia de ponta que combina diversos sistemas integrados para proporcionar m√°xima efici√™ncia operacional. O processo inicia-se com a coleta de dados atrav√©s de sensores distribu√≠dos estrategicamente ao longo do equipamento, que monitoram constantemente par√¢metros como temperatura, press√£o, velocidade, vibra√ß√£o e outros indicadores cr√≠ticos. Estes dados s√£o processados em tempo real por um sistema de controle inteligente que utiliza algoritmos avan√ßados de machine learning para otimizar automaticamente os par√¢metros operacionais. O sistema tamb√©m possui redund√¢ncias de seguran√ßa que garantem opera√ß√£o cont√≠nua mesmo em situa√ß√µes adversas, incluindo sistemas de backup, failsafe autom√°tico e protocolos de emerg√™ncia. A interface de usu√°rio foi desenvolvida seguindo princ√≠pios de usabilidade moderna, proporcionando controle intuitivo e visualiza√ß√£o clara de todos os par√¢metros relevantes.`;

    const longNotes = `Observa√ß√µes importantes: Este equipamento requer instala√ß√£o por t√©cnicos certificados e treinamento espec√≠fico para operadores. √â necess√°rio ambiente climatizado com temperatura entre 18¬∞C e 25¬∞C e umidade relativa entre 45% e 65%. O equipamento deve ser conectado √† rede estabilizada com prote√ß√£o contra surtos el√©tricos. Recomenda-se programa de manuten√ß√£o preventiva trimestral e calibra√ß√£o semestral dos sensores. O suporte t√©cnico est√° dispon√≠vel via telefone, email e portal web 24 horas por dia, 7 dias por semana. Garantia de 12 meses para componentes e 24 meses para software. Pe√ßas de reposi√ß√£o dispon√≠veis por 10 anos. Treinamento inicial incluso para at√© 5 operadores. Documenta√ß√£o t√©cnica completa fornecida em portugu√™s. Certifica√ß√µes CE, ISO 9001, ISO 14001 inclu√≠das.`;

    const testData = {
        quote_code: `TEST-LONGTEXT-${Date.now()}`,
        date: '2025-09-23',
        client: 'Empresa Teste Textos Longos Ltda',
        cnpj: '12.345.678/0001-90',
        company: 'Pharmatec Solutions',
        representative: 'Jo√£o Silva',
        machine_model: 'PH-2025-LONGTEXT',
        validity: '30',
        delivery: '45 dias',
        notes: longNotes,
        seller_name: 'Vendedor Teste',
        contact_email: 'teste@pharmatec.com.br',
        contact_phone: '(11) 99999-9999',
        tech_spec: longTechSpec,
        principle: longPrinciple,
        specs_json: JSON.stringify({
            tech_spec: longTechSpec,
            principle: longPrinciple,
            sections: {
                itemsEquipA: [
                    { name: 'Equipamento Principal', qty: 1, unit: 50000, currency: 'BRL' }
                ],
                itemsAssessoriaA: [],
                itemsOperacionaisA: [],
                itemsCertificadosA: [],
                itemsEquipB: [],
                itemsAssessoriaB: [],
                itemsOperacionaisB: [],
                itemsCertificadosB: []
            }
        })
    };

    try {
        console.log('üìÑ Teste 1: Preview HTML com textos longos...');
        const form1 = new FormData();
        Object.keys(testData).forEach(key => {
            form1.append(key, testData[key]);
        });

        const previewResponse = await fetch(`${baseUrl}/quotes/preview-html`, {
            method: 'POST',
            body: form1
        });

        if (previewResponse.ok) {
            console.log('‚úÖ Preview HTML: SUCESSO');
            const htmlContent = await previewResponse.text();

            // Check if long text appears and styles are applied
            if (htmlContent.includes('word-wrap: break-word')) {
                console.log('‚úÖ Estilos de quebra de linha aplicados');
            } else {
                console.log('‚ö†Ô∏è Estilos de quebra de linha n√£o encontrados');
            }

            if (htmlContent.includes('line-height: 1.6')) {
                console.log('‚úÖ Line-height melhorado aplicado');
            } else {
                console.log('‚ö†Ô∏è Line-height n√£o encontrado');
            }

            console.log('‚ÑπÔ∏è Tamanho do texto t√©cnico:', longTechSpec.length, 'caracteres');
            console.log('‚ÑπÔ∏è Tamanho do princ√≠pio:', longPrinciple.length, 'caracteres');
            console.log('‚ÑπÔ∏è Tamanho das observa√ß√µes:', longNotes.length, 'caracteres');

        } else {
            console.log('‚ùå Preview HTML: FALHOU');
            console.log('Status:', previewResponse.status);
        }

        console.log('\nüìÑ Teste 2: Gera√ß√£o PDF com textos longos...');
        const form2 = new FormData();
        Object.keys(testData).forEach(key => {
            form2.append(key, testData[key]);
        });

        const pdfResponse = await fetch(`${baseUrl}/quotes/generate-pdf`, {
            method: 'POST',
            body: form2
        });

        if (pdfResponse.ok) {
            console.log('‚úÖ PDF Generation: SUCESSO');
            console.log('   Textos longos processados sem erros');
            console.log('   Quebra de linha autom√°tica aplicada');
        } else {
            console.log('‚ùå PDF Generation: FALHOU');
            console.log('Status:', pdfResponse.status);
        }

        console.log('\nüéØ Teste de Textos Longos Finalizado!');
        console.log('\nüìã Melhorias implementadas:');
        console.log('   ‚úÖ word-wrap: break-word - quebra palavras longas');
        console.log('   ‚úÖ overflow-wrap: break-word - quebra em overflow');
        console.log('   ‚úÖ hyphens: auto - hifeniza√ß√£o autom√°tica');
        console.log('   ‚úÖ line-height: 1.6 - melhor espa√ßamento entre linhas');
        console.log('\nüìè Limites testados:');
        console.log(`   ‚Ä¢ Especifica√ß√£o t√©cnica: ${longTechSpec.length} caracteres`);
        console.log(`   ‚Ä¢ Princ√≠pio funcionamento: ${longPrinciple.length} caracteres`);
        console.log(`   ‚Ä¢ Observa√ß√µes: ${longNotes.length} caracteres`);

    } catch (error) {
        console.error('‚ùå Erro durante o teste:', error);
    }
}

testLongTextWrapping();