<%- include('partials/top') %>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

<style>
  .dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 24px;
    margin-bottom: 32px;
  }

  .stat-card {
    background: white;
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border-left: 4px solid #dc2626;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    box-shadow: 0 4px 16px rgba(0,0,0,0.15);
    transform: translateY(-2px);
  }

  .stat-card h3 {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 8px 0;
    color: #dc2626;
  }

  .stat-card p {
    margin: 0;
    color: #6b7280;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .stat-card.green h3 { color: #059669; border-left-color: #059669; }
  .stat-card.orange h3 { color: #f59e0b; border-left-color: #f59e0b; }
  .stat-card.blue h3 { color: #3b82f6; border-left-color: #3b82f6; }
  .stat-card.purple h3 { color: #8b5cf6; border-left-color: #8b5cf6; }

  .chart-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 24px;
    margin-bottom: 32px;
  }

  .chart-card {
    background: white;
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }

  .chart-card h3 {
    margin: 0 0 20px 0;
    color: #1f2937;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .chart-container {
    position: relative;
    height: 300px;
  }

  .table-card {
    background: white;
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    margin-bottom: 24px;
  }

  .table-card h3 {
    margin: 0 0 20px 0;
    color: #1f2937;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .data-table {
    width: 100%;
    border-collapse: collapse;
  }

  .data-table th,
  .data-table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #e5e7eb;
  }

  .data-table th {
    background: #f9fafb;
    font-weight: 600;
    color: #374151;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .data-table tr:hover {
    background: #f9fafb;
  }

  .progress-bar {
    width: 100%;
    height: 8px;
    background: #e5e7eb;
    border-radius: 4px;
    overflow: hidden;
    margin-top: 8px;
  }

  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, #dc2626, #ef4444);
    border-radius: 4px;
    transition: width 0.3s ease;
  }
</style>

<h2 style="margin-bottom: 24px; color: #1f2937;">üìä Dashboard</h2>

<!-- Stats Cards -->
<div class="dashboard-grid">
  <div class="stat-card">
    <h3 id="totalQuotes">0</h3>
    <p>Total de Cota√ß√µes</p>
  </div>

  <div class="stat-card green">
    <h3 id="completedQuotes">0</h3>
    <p>Conclu√≠das</p>
  </div>

  <div class="stat-card orange">
    <h3 id="draftQuotes">0</h3>
    <p>Rascunhos</p>
  </div>

  <% if (currentUser && currentUser.role === 'admin') { %>
  <div class="stat-card blue">
    <h3 id="totalUsers">0</h3>
    <p>Usu√°rios Ativos</p>
  </div>
  <% } %>
</div>

<!-- Charts -->
<div class="chart-grid">
  <div class="chart-card">
    <h3>Status das Cota√ß√µes Conclu√≠das</h3>
    <div class="chart-container">
      <canvas id="businessStatusChart"></canvas>
    </div>
  </div>

  <div class="chart-card">
    <h3>Cota√ß√µes por Status</h3>
    <div class="chart-container">
      <canvas id="statusChart"></canvas>
    </div>
  </div>
</div>

<!-- Top Suppliers -->
<div class="table-card">
  <h3>üè≠ Top 10 Fornecedores</h3>
  <table class="data-table" id="suppliersTable">
    <thead>
      <tr>
        <th>Fornecedor</th>
        <th style="text-align: right;">Cota√ß√µes</th>
        <th style="width: 50%;">Participa√ß√£o</th>
      </tr>
    </thead>
    <tbody>
      <tr><td colspan="3" style="text-align: center; color: #9ca3af;">Carregando...</td></tr>
    </tbody>
  </table>
</div>

<!-- Top Clients -->
<div class="table-card">
  <h3>üè¢ Top 10 Clientes</h3>
  <table class="data-table" id="clientsTable">
    <thead>
      <tr>
        <th>Cliente</th>
        <th style="text-align: right;">Cota√ß√µes</th>
        <th style="width: 50%;">Participa√ß√£o</th>
      </tr>
    </thead>
    <tbody>
      <tr><td colspan="3" style="text-align: center; color: #9ca3af;">Carregando...</td></tr>
    </tbody>
  </table>
</div>

<% if (currentUser && currentUser.role === 'admin') { %>
<!-- Quotes by User -->
<div class="table-card">
  <h3>üë§ Cota√ß√µes por Usu√°rio</h3>
  <table class="data-table" id="usersTable">
    <thead>
      <tr>
        <th>Usu√°rio</th>
        <th style="text-align: right;">Cota√ß√µes</th>
        <th style="width: 50%;">Desempenho</th>
      </tr>
    </thead>
    <tbody>
      <tr><td colspan="3" style="text-align: center; color: #9ca3af;">Carregando...</td></tr>
    </tbody>
  </table>
</div>
<% } %>

<script>
  // Buscar dados do dashboard
  async function loadDashboard() {
    try {
      const response = await fetch('/api/dashboard-stats');
      const stats = await response.json();

      // Atualizar cards
      document.getElementById('totalQuotes').textContent = stats.totalQuotes || 0;
      document.getElementById('completedQuotes').textContent = (stats.byStatus?.['Conclu√≠da'] || 0);
      document.getElementById('draftQuotes').textContent = stats.totalDrafts || 0;

      <% if (currentUser && currentUser.role === 'admin') { %>
      document.getElementById('totalUsers').textContent = stats.totalUsers || 0;
      <% } %>

      // Gr√°fico de Business Status (Pizza)
      const businessStatusCtx = document.getElementById('businessStatusChart');
      const businessStatusData = stats.byBusinessStatus || {};
      new Chart(businessStatusCtx, {
        type: 'pie',
        data: {
          labels: ['Ativa', 'Com Pedido', 'Finalizada', 'Baixa'],
          datasets: [{
            data: [
              businessStatusData.ativa || 0,
              businessStatusData.pedido_compra || 0,
              businessStatusData.finalizada || 0,
              businessStatusData.baixa || 0
            ],
            backgroundColor: ['#3b82f6', '#8b5cf6', '#059669', '#ef4444'],
            borderWidth: 2,
            borderColor: '#fff'
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });

      // Gr√°fico de Status (Barra)
      const statusCtx = document.getElementById('statusChart');
      const statusData = stats.byStatus || {};
      new Chart(statusCtx, {
        type: 'bar',
        data: {
          labels: Object.keys(statusData),
          datasets: [{
            label: 'Cota√ß√µes',
            data: Object.values(statusData),
            backgroundColor: '#dc2626',
            borderRadius: 8
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 1
              }
            }
          }
        }
      });

      // Tabela de Fornecedores
      const suppliersTable = document.getElementById('suppliersTable').querySelector('tbody');
      const suppliers = stats.bySupplier || [];
      const maxSupplier = Math.max(...suppliers.map(s => s.count), 1);

      if (suppliers.length > 0) {
        suppliersTable.innerHTML = suppliers.map(s => `
          <tr>
            <td><strong>${s.supplier}</strong></td>
            <td style="text-align: right;"><strong>${s.count}</strong></td>
            <td>
              <div class="progress-bar">
                <div class="progress-fill" style="width: ${(s.count / maxSupplier * 100)}%"></div>
              </div>
            </td>
          </tr>
        `).join('');
      } else {
        suppliersTable.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #9ca3af;">Nenhum fornecedor encontrado</td></tr>';
      }

      // Tabela de Clientes
      const clientsTable = document.getElementById('clientsTable').querySelector('tbody');
      const clients = stats.byClient || [];
      const maxClient = Math.max(...clients.map(c => c.count), 1);

      if (clients.length > 0) {
        clientsTable.innerHTML = clients.map(c => `
          <tr>
            <td><strong>${c.client}</strong></td>
            <td style="text-align: right;"><strong>${c.count}</strong></td>
            <td>
              <div class="progress-bar">
                <div class="progress-fill" style="width: ${(c.count / maxClient * 100)}%"></div>
              </div>
            </td>
          </tr>
        `).join('');
      } else {
        clientsTable.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #9ca3af;">Nenhum cliente encontrado</td></tr>';
      }

      <% if (currentUser && currentUser.role === 'admin') { %>
      // Tabela de Usu√°rios
      const usersTable = document.getElementById('usersTable').querySelector('tbody');
      const users = stats.byUser || [];
      const maxUser = Math.max(...users.map(u => u.count), 1);

      if (users.length > 0) {
        usersTable.innerHTML = users.map(u => `
          <tr>
            <td><strong>${u.full_name || u.username}</strong></td>
            <td style="text-align: right;"><strong>${u.count}</strong></td>
            <td>
              <div class="progress-bar">
                <div class="progress-fill" style="width: ${(u.count / maxUser * 100)}%"></div>
              </div>
            </td>
          </tr>
        `).join('');
      } else {
        usersTable.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #9ca3af;">Nenhum usu√°rio encontrado</td></tr>';
      }
      <% } %>

    } catch (error) {
      console.error('Erro ao carregar dashboard:', error);
    }
  }

  // Carregar ao iniciar
  loadDashboard();
</script>

<%- include('partials/bottom') %>
