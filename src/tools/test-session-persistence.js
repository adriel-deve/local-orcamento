import fetch from 'node-fetch';

async function testSessionPersistence() {
  console.log('üß™ Testando persist√™ncia de sess√£o no Vercel...\n');

  const baseUrl = 'https://local-orcamento.vercel.app';
  let sessionCookie = null;

  try {
    // Step 1: Login
    console.log('1Ô∏è‚É£ Fazendo login...');
    const loginResponse = await fetch(`${baseUrl}/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: 'username=admin&password=admin123',
      redirect: 'manual'
    });

    // Extract session cookie
    const setCookieHeader = loginResponse.headers.get('set-cookie');
    if (setCookieHeader) {
      sessionCookie = setCookieHeader.split(';')[0]; // Get just the cookie value
      console.log('   ‚úÖ Login bem-sucedido!');
      console.log('   Session cookie:', sessionCookie);
    } else {
      console.log('   ‚ùå Nenhum cookie de sess√£o retornado!');
      return;
    }

    // Step 2: Try to access protected route WITH cookie
    console.log('\n2Ô∏è‚É£ Acessando /quotes/new COM cookie de sess√£o...');
    const quotesResponse = await fetch(`${baseUrl}/quotes/new`, {
      headers: {
        'Cookie': sessionCookie
      },
      redirect: 'manual'
    });

    console.log('   Status:', quotesResponse.status);

    if (quotesResponse.status === 200) {
      console.log('   ‚úÖ Acesso autorizado! Sess√£o est√° funcionando!');

      // Check if it's actually the quotes page, not login page
      const body = await quotesResponse.text();
      if (body.includes('Nova Cota√ß√£o') || body.includes('Cota√ß√£o')) {
        console.log('   ‚úÖ P√°gina de cota√ß√µes carregada corretamente!');
      } else if (body.includes('login') || body.includes('Login')) {
        console.log('   ‚ùå Redirecionou para login - SESS√ÉO N√ÉO PERSISTIU');
      }
    } else if (quotesResponse.status === 302) {
      const location = quotesResponse.headers.get('location');
      console.log('   Redirecionando para:', location);

      if (location === '/login' || location.includes('/login')) {
        console.log('   ‚ùå Sess√£o n√£o est√° sendo preservada!');
      } else {
        console.log('   ‚ö†Ô∏è  Redirecionamento inesperado');
      }
    }

    // Step 3: Try accessing without cookie
    console.log('\n3Ô∏è‚É£ Acessando /quotes/new SEM cookie (teste de seguran√ßa)...');
    const unauthorizedResponse = await fetch(`${baseUrl}/quotes/new`, {
      redirect: 'manual'
    });

    console.log('   Status:', unauthorizedResponse.status);

    if (unauthorizedResponse.status === 302) {
      const location = unauthorizedResponse.headers.get('location');
      if (location === '/login' || location.includes('/login')) {
        console.log('   ‚úÖ Corretamente redirecionado para login (prote√ß√£o funcionando)');
      }
    }

    console.log('\n‚úÖ Teste de sess√£o conclu√≠do!');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
    console.error(error);
  }
}

testSessionPersistence();
